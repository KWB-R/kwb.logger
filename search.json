[{"path":"https://kwb-r.github.io/kwb.logger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Michael Rustler. Contributor. . Funder. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.logger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H (2022). kwb.logger: Functions read measurement data logger files. R package version 0.3.0, https://github.com/KWB-R/kwb.logger.","code":"@Manual{,   title = {kwb.logger: Functions to read measurement data from logger files},   author = {Hauke Sonnenberg},   year = {2022},   note = {R package version 0.3.0},   url = {https://github.com/KWB-R/kwb.logger}, }"},{"path":"https://kwb-r.github.io/kwb.logger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions to read measurement data from logger files","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))  # Download and install kwb.logger in R install.packages('kwb.logger')  # Browse the kwb.logger manual pages help(package = 'kwb.logger')"},{"path":"https://kwb-r.github.io/kwb.logger/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2014-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Meta Data from File Lines — .getMetadata","title":"Get Meta Data from File Lines — .getMetadata","text":"Lines lines containing \"Outer Diameter\"  \"Txducers Spacing\",  respectively, extrated.","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Meta Data from File Lines — .getMetadata","text":"","code":".getMetadata(   mylines,   beginPattern = \"Outer Diameter\",   endPattern = \"Txducers Spacing\",   transpose = TRUE )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Meta Data from File Lines — .getMetadata","text":"mylines vector character, representing line text file beginPattern pattern matching line meta data block begins endPattern pattern matching line meta data block ends transpose (default: TRUE)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Meta Data from File Lines — .getMetadata","text":"meta data read mylines form    data frame one row containing meta data values different   columns (transpose == FALSE) data frame columns names values (transpose == TRUE)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getSampleTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Sample Times from Automatic Sampler File — .getSampleTimes","title":"Read Sample Times from Automatic Sampler File — .getSampleTimes","text":"Read Sample Times Automatic Sampler File","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getSampleTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Sample Times from Automatic Sampler File — .getSampleTimes","text":"","code":".getSampleTimes(   filepath,   blockbegin,   sep = \";\",   dec = \",\",   captionPattern = \"Datum;Uhrzeit\",   warn = TRUE )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getSampleTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Sample Times from Automatic Sampler File — .getSampleTimes","text":"filepath full path file generated automatic sample blockbegin blockbegin sep field separator (default: \";\") dec decimal separator (default: \",\") captionPattern pattern matching caption line. Default: \"Datum;Uhrzeit\" warn warnings printed (default: TRUE)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getValidTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Times from Given Lines — .getValidTimes","title":"Read Times from Given Lines — .getValidTimes","text":"Read Times Given Lines","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getValidTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Times from Given Lines — .getValidTimes","text":"","code":".getValidTimes(mylines, timeformat = \"%y-%m-%d %H:%M:%S\")"},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getValidTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Times from Given Lines — .getValidTimes","text":"mylines vector character, representing line text file timeformat time format looked mylines. Default: \"%y-%m-%d %H:%M:%S\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/dot-getValidTimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Times from Given Lines — .getValidTimes","text":"list elements tstamps (timestamps text ISO format)   tstampIndex (contains text line index  tstamps timestamp corresponding line found.","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/extdataFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to File in Installed Package — extdataFile","title":"Path to File in Installed Package — extdataFile","text":"Path File Installed Package","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/extdataFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to File in Installed Package — extdataFile","text":"","code":"extdataFile(..., must_exist = TRUE)"},{"path":"https://kwb-r.github.io/kwb.logger/reference/extdataFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to File in Installed Package — extdataFile","text":"... parts file path passed system.file must_exist TRUE (default) specified file  exist, program stops error message","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/extdataFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to File in Installed Package — extdataFile","text":"path file package installation folder R library   \"\" path exist path specified file","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/extdataFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to File in Installed Package — extdataFile","text":"","code":"# List the files provided in the \"extdata\" folder of kwb.logger dir(extdataFile()) #> [1] \"FLEXIM\"    \"FLUKE\"     \"InSituInc\" \"NIVUS\"     \"Ori\"       \"PCE\"       #> [7] \"SIGMA\"     \"STS\"       \"VEGA\""},{"path":"https://kwb-r.github.io/kwb.logger/reference/getExampleTimestamps.html","id":null,"dir":"Reference","previous_headings":"","what":"Timestamp Strings from Example Looger Files — getExampleTimestamps","title":"Timestamp Strings from Example Looger Files — getExampleTimestamps","text":"Timestamp Strings Example Looger Files","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/getExampleTimestamps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timestamp Strings from Example Looger Files — getExampleTimestamps","text":"","code":"getExampleTimestamps()"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Flaschenbericht.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from Buehler 4010 (Flaschenbericht) — readLogger_Buehler_4010_Flaschenbericht","title":"Read Logger File from Buehler 4010 (Flaschenbericht) — readLogger_Buehler_4010_Flaschenbericht","text":"Read Logger File Buehler 4010 (Flaschenbericht)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Flaschenbericht.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from Buehler 4010 (Flaschenbericht) — readLogger_Buehler_4010_Flaschenbericht","text":"","code":"readLogger_Buehler_4010_Flaschenbericht(   samplerFile,   headerPattern = paste0(\"Flasche\\\\s+Datum\\\\s+Zeit\\\\s+F.llzeit\\\\s+PN Soll\",     \"\\\\s+PN Ist\\\\s+P/E\"),   endPattern = \"---\",   tz = \"Etc/GMT+1\" )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Flaschenbericht.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from Buehler 4010 (Flaschenbericht) — readLogger_Buehler_4010_Flaschenbericht","text":"samplerFile full path file generated auto sampler headerPattern pattern matching header row endPattern pattern matching end table tz time zone. Default: \"Etc/GMT+1","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Infospeicher.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from Buehler 4010 (Infospeicher) — readLogger_Buehler_4010_Infospeicher","title":"Read Logger File from Buehler 4010 (Infospeicher) — readLogger_Buehler_4010_Infospeicher","text":"Read Logger File Buehler 4010 (Infospeicher)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Infospeicher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from Buehler 4010 (Infospeicher) — readLogger_Buehler_4010_Infospeicher","text":"","code":"readLogger_Buehler_4010_Infospeicher(samplerFile, unprocessed = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Buehler_4010_Infospeicher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from Buehler 4010 (Infospeicher) — readLogger_Buehler_4010_Infospeicher","text":"samplerFile full path file generated auto sampler Buehler 4010 (Infospeicher) unprocessed TRUE, information returned \"raw\", .e. without aggregation ... arguments passed .read_Infospeicher.raw, e.g. tz, see ","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLEXIM_F601.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","title":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","text":"Read Logger File FLEXIM F601","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLEXIM_F601.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","text":"","code":"readLogger_FLEXIM_F601(   filename,   sep = \"\\t\",   dec = \",\",   timeformat = \"%d.%m.%Y %H:%M:%S\",   headerPattern = \"Uhrzeit\\tDruck\",   date_yyyymmdd = substr(basename(filename), 1, 8),   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLEXIM_F601.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","text":"filename full path logger file sep column separator dec decimal character timeformat time format string headerPattern pattern matching header line date_yyyymmdd datestring, default taken filename dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLEXIM_F601.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","text":"http://www.flexim.com/files/tsfluxus_f601v1-5-1de_leu.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLEXIM_F601.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from FLEXIM F601 — readLogger_FLEXIM_F601","text":"","code":"# Set path to example file (contained in this package) file <- extdataFile(\"FLEXIM/example_FLEXIM_F601_short.txt\")     # Let's have a look on the file structure writeLines(readLines(file)) #>  #> :::::::::::::::::::::::::::::::::::: #> \\SOURCE=empfangene Daten[05] (V5.98) #> DEVICE           : F 601  -06012239 #> MODE             : STORED #> NAME             : SCANDATA #> CHAN             : 1 (A:) #> START            : 09.09.2013  12:25:25 #> \\COMMENTS #> \\PARAMS #> Para.Satz        : #> Me<df>stelle Nr.:   : A:1 #> Rohr             : #>  Au<df>endurchmesser:     226,0 mm #>  Wanddicke       :       6,5 mm #>  Rauhigkeit      :       0,1 mm #>  Rohrmaterial    : Stahl (Normal) #>  c-Material      :    3230,0 m/s #> Auskleidung      : OHNE AUSKLEIDUNG #> Medium           : Wasser #>  c-Medium     MIN:    1454,7 m/s #>  c-Medium     MAX:    1454,7 m/s #>  kin. Viskosit<e4>t :      1,23 mm2/s #>  Dichte          :      1,00 g/cm3 #>  Medientemperatur:        12 C #>  Mediendruck     :      6,50 bar #> Sensortyp        : CDM1NZ725491 #> Schallweg        :         2 NUM #> Sensorabstand    :     123,0 mm #> D<e4>mpfung         :        10 s #> Ablagerate       :  00:00:01 SAMPLES #> Profile corr.    : ON #> Me<df>gr<f6><df>e         : Volumenstrom #> Ma<df>einheit       : [m3/h]/[m3] #> AnzahlMesswerte  : 3194 #>  #> \\DATA #> \\*\tDATE_TIME\tMEASURE\tSSPEED\tGAIN\tSCNR\tSNR\tVARIAMP\tVARITIME\tERRBITS\t #> \\#\t\t[m3/h]\t[m/s]\t[dB]\t[dB]\t[dB]\t[%]\t[%]\t[bits]\t #> A\t09.09.2013 12:25:25\t122,76\t1509,68\t85\t40\t23\t0\t0\t0\t #> A\t09.09.2013 12:25:26\t122,76\t1509,68\t85\t40\t23\t0\t0\t0\t #> A\t09.09.2013 13:18:31\t177,15\t1509,88\t85\t40\t30\t0\t0\t0\t #> A\t09.09.2013 13:18:32\t174,71\t1509,76\t85\t40\t29\t0\t0\t0\t #> A\t09.09.2013 13:18:33\t173,56\t1509,76\t85\t40\t29\t0\t0\t0\t #> A\t09.09.2013 13:18:34\t167,40\t1509,65\t85\t40\t29\t0\t0\t0\t #> A\t09.09.2013 13:18:35\t164,32\t1509,57\t85\t41\t29\t0\t0\t0\t #> A\t09.09.2013 13:18:36\t159,45\t1509,48\t85\t41\t30\t0\t0\t0\t #> A\t09.09.2013 13:18:37\t154,19\t1509,48\t85\t41\t30\t0\t0\t0\t #> A\t09.09.2013 13:18:38\t151,24\t1509,42\t85\t40\t29\t0\t0\t0\t #> \\END #>  #> \\END_OF_SET[5] #> ------------------------------------ #>  #>  #>   if (FALSE) {    # Now read the file x <- readLogger_FLEXIM_F601(file)    # Show the first lines head(x)    # Get the meta data and show its structure str(kwb.utils::getAttribute(x, \"metadata\")) }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLUKE_1730.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","title":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","text":"Read Logger File FLUKE_1730","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLUKE_1730.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","text":"","code":"readLogger_FLUKE_1730(filepath, sep = \";\", dec = \".\")"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLUKE_1730.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","text":"filepath full path logger file sep column separator dec decimal character","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLUKE_1730.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","text":"http://assets.fluke.com/manuals/1730____umeng0000.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_FLUKE_1730.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from FLUKE_1730 — readLogger_FLUKE_1730","text":"","code":"if (FALSE) { # set path to example file (contained in this package) file <- extdataFile(\"FLUKE/example_FLUKE_1730_1.txt\")  # read the file x <- readLogger_FLUKE_1730(file)    # examine the list structure of the result str(x)   }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_InSituInc_Aquatroll.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","title":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","text":"Read File InSituInc Aquatroll","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_InSituInc_Aquatroll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","text":"","code":"readLogger_InSituInc_Aquatroll(   csv,   headerPattern = NULL,   timestampFormat = c(\"%d.%m.%Y %H:%M:%S\", \"%d.%m.%Y%H:%M:%S\"),   tz = \"Etc/GMT+1\",   maxRowToLookForHeader = 700,   model = \"\",   dbg = FALSE,   fileEncoding = \"latin1\" )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_InSituInc_Aquatroll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","text":"csv full path logger file headerPattern pattern matching header table. See source code default. timestampFormat vector possible timestamp formats. See help default. tz time zone. default: \"Etc/GMT+1\" maxRowToLookForHeader number first rows file read advance look header line. Default: 700 model model Aquatroll (either \"\" \"600\") dbg TRUE, debug messages shown fileEncoding encoding input file. Default: \"latin1\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_InSituInc_Aquatroll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","text":"model = \"600\" data frame columns DateTime,  Seconds, Temp, ActCond, SpecCond,  TDS, Resis, WaterD, DOC, DOP,  Tur, Sal otherwise data frame columns  DateTime, WaterTemp.C, SpecCond.uS","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_InSituInc_Aquatroll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read File From InSituInc Aquatroll — readLogger_InSituInc_Aquatroll","text":"","code":"# set path to example file (contained in this package) file_1 <- extdataFile(\"InSituInc/example_InSituInc_Aquatroll.csv\") file_2 <- extdataFile(\"InSituInc/example_InSituInc_Aquatroll_600.csv\")  # let's have a look on the file structure (read first 75 lines) writeLines(kwb.utils::readLinesWithEncoding(file_1, 75, fileEncoding = \"latin1\")) #> Report Date:;08.04.2014 12:24:28 #> Report User Name:;miacsomini #> Report Computer Name:;KWB45 #> Application:;WinSitu.exe #> Application Version:;5.6.21.0 #>  #>  #> Log File Properties #> File Name;March19_test_Append_2014-04-08_10-00-41-718.wsl #> Create Date;08.04.2014 10:00:41 #>  #> Device Properties #> Device;Aqua TROLL 100 #> Site;Panke Messstelle Bürgerpark #> Device Name;  #> Serial Number;192791 #> Firmware Version;1.10 #> Hardware Version;2 #> Device Address;1 #> Device Comm Cfg;19200,8,Even,1,(Modbus-RTU) #> Used Memory;26 #> Used Battery;61 #>  #> Log Configuration #> ;Log Name;March19_test #> ;Created By;miacsomini #> ;Computer Name;KWB45 #> ;Application;WinSitu.exe #> ;Application Version;5.6.21.0 #> ;Create Date;19.03.2014 16:04:56 Westeuropäische Normalzeit #> ;Log Setup Time Zone;Westeuropäische Normalzeit #> ;Notes Size(bytes);4096 #> ;Overwrite when full;Disabled #> ;Scheduled Start Time;Manual Start #> ;Scheduled Stop Time;No Stop Time #> ;Type;Linear #>  ;Interval;Days: 0 hrs: 00 mins: 15 secs: 00 #>  #>  #>  #>  #>  #> Other Log Settings #>  #> ;Specific Conductivity Model:;Standard Methods #> ;;Reference Temperature:;25 #> ;;Temperature Coefficient:;0.0191 #>  #>  #> Log Notes: #> Date and Time;Note #> 19.03.2014 16:04:59;Sensor SN: 192791  Factory calibration has expired.: 31.07.2012 19:14:39 #> 19.03.2014 16:05:00;Used Battery: 61% Used Memory: 28%   User Name: miacsomini #> 19.03.2014 16:05:22;Manual Start Command #> 28.03.2014 10:26:46;Log Download - Used Battery: 61% Used Memory: 28%   User Name: miacsomini #> 04.04.2014 12:06:06;Log Download - Used Battery: 62% Used Memory: 28%   User Name: miacsomini Interval -  Start Time: 28.03.2014 10:20:22 #> 08.04.2014 10:00:20;Log Download - Used Battery: 62% Used Memory: 28%   User Name: miacsomini Interval -  Start Time: 04.04.2014 12:05:22 #>  #>  #> Log Data: #> Record Count;1892 #>  #> Sensors;1 #>  #>  ,1,192791,Conductivity #>  #> Time Zone: Westeuropäische Normalzeit/Westeuropäische Sommerzeit #>  #> ;;Sensor: Cond                  ;Sensor: Cond                  ;Sensor: Cond                  ; #> ;Elapsed Time;SN#: 192791                   ;SN#: 192791                   ;SN#: 192791                   ; #> Date and Time;Seconds     ;Actual Conductivity (µS)      ;Temperature (C)               ;Specific Conductivity (µS)    ; #> 19.03.2014 16:05:22;       0.000;                         0.000;                        15.388;                         0.000; #> 19.03.2014 16:20:22;     900.000;                       594.037;                         9.188;                       851.072; #> 19.03.2014 16:35:22;    1800.000;                       592.425;                         9.034;                       852.341; #> 19.03.2014 16:50:22;    2700.000;                       591.354;                         9.014;                       851.265;    # now read the file x <- readLogger_InSituInc_Aquatroll(csv = file_1)    # show the first lines head(x) #>              DateTime WaterTemp.C SpecCond.uS #> 1 2014-03-19 16:05:22      15.388       0.000 #> 2 2014-03-19 16:20:22       9.188     851.072 #> 3 2014-03-19 16:35:22       9.034     852.341 #> 4 2014-03-19 16:50:22       9.014     851.265 #> 5 2014-03-19 17:05:22       9.002     853.110 #> 6 2014-03-19 17:20:22       8.994     851.842    # Read a file of Aquatroll, model \"600\" x600 <- readLogger_InSituInc_Aquatroll(csv = file_2, model = \"600\")    # show the first lines head(x600) #>              DateTime Seconds   Temp ActCond SpecCond   TDS    Resis WaterD #> 1 2016-05-23 15:31:50       0 21.989 850.124  901.993 0.586 1176.299  0.998 #> 2 2016-05-23 15:41:50     600 21.958 850.227  902.682 0.587 1176.156  0.998 #> 3 2016-05-23 15:51:50    1200 22.020 852.309  903.728 0.587 1173.284  0.998 #> 4 2016-05-23 16:01:50    1800 22.240 855.438  903.051 0.587 1168.992  0.998 #> 5 2016-05-23 16:11:50    2400 22.323 856.954  903.168 0.587 1166.924  0.998 #> 6 2016-05-23 16:21:50    3000 22.279 856.129  903.067 0.587 1168.048  0.998 #>     DOC    DOP    Tur   Sal #> 1 7.625 85.414  2.280 0.449 #> 2 7.760 86.878 27.350 0.449 #> 3 7.757 86.949  6.956 0.450 #> 4 8.073 90.873 23.021 0.449 #> 5 8.248 92.985  8.576 0.449 #> 6 8.135 91.631  5.611 0.449    # show the structure str(x600) #> 'data.frame':\t124 obs. of  12 variables: #>  $ DateTime: POSIXct, format: \"2016-05-23 15:31:50\" \"2016-05-23 15:41:50\" ... #>  $ Seconds : num  0 600 1200 1800 2400 3000 3600 4200 4800 5400 ... #>  $ Temp    : num  22 22 22 22.2 22.3 ... #>  $ ActCond : num  850 850 852 855 857 ... #>  $ SpecCond: num  902 903 904 903 903 ... #>  $ TDS     : num  0.586 0.587 0.587 0.587 0.587 0.587 0.587 0.587 0.587 0.587 ... #>  $ Resis   : num  1176 1176 1173 1169 1167 ... #>  $ WaterD  : num  0.998 0.998 0.998 0.998 0.998 0.998 0.998 0.998 0.998 0.998 ... #>  $ DOC     : num  7.62 7.76 7.76 8.07 8.25 ... #>  $ DOP     : num  85.4 86.9 86.9 90.9 93 ... #>  $ Tur     : num  2.28 27.35 6.96 23.02 8.58 ... #>  $ Sal     : num  0.449 0.449 0.45 0.449 0.449 0.449 0.449 0.449 0.449 0.449 ..."},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","text":"Read Logger File NIVUS PCM4","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","text":"","code":"readLogger_NIVUS_PCM4(csv, completenessRequiredFor = c(\"DateTime\", \"H\", \"v\"))"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","text":"csv full path CSV file completenessRequiredFor character string column names required empty","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","text":"http://www.nivus.de/ximages/1397007_p4ba02en.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4","text":"","code":"if (FALSE) { # set path to example file (contained in this package) file <- extdataFile(\"NIVUS/example_NIVUS_PCM4.TXT\")  # read the file x <- readLogger_NIVUS_PCM4(file)    # examine the list structure of the result str(x)   }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","text":"Read Logger File NIVUS PCM4","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","text":"","code":"readLogger_NIVUS_PCM4_2(   filepath,   headerRow = 9,   sep = \"\\t\",   maxCols = 50,   removeEmptyColumns = FALSE )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","text":"filepath full path logger file headerRow number row containing header row table sep column separator maxCols maximum number columns removeEmptyColumns TRUE empty columns removed","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4_2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","text":"http://www.nivus.de/ximages/1397007_p4ba02en.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_NIVUS_PCM4_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from NIVUS PCM4 — readLogger_NIVUS_PCM4_2","text":"","code":"if (FALSE) { # set paths to example files (contained in this package) files <- c(   extdataFile(\"NIVUS/example_NIVUS_PCM4_ALT.TXT\"),   extdataFile(\"NIVUS/example_NIVUS_PCM4_NEU.TXT\"),   extdataFile(\"NIVUS/example_NIVUS_PCM4_STR.TXT\") )   # read the files x1 <- readLogger_NIVUS_PCM4_2(files[1L]) x2 <- readLogger_NIVUS_PCM4_2(files[2L]) x3 <- readLogger_NIVUS_PCM4_2(files[3L])    # compare structures str(x1) str(x2) str(x3)    # get metadata (metadata <- kwb.utils::getAttribute(x1, \"metadata\"))    # show time adjusts metadata$timeAdjust }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_BasicEx1.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","title":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","text":"Read Logger File Ori BasicEx1","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_BasicEx1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","text":"","code":"readLogger_Ori_BasicEx1(   filepath,   infotype = validInfoTypes(),   blockbegin = \"ORI BasicEx1\",   warn = TRUE,   sep = \";\",   dec = \",\",   colnameDate = \"Datum\",   colnameTime = \"Uhrzeit\",   dateformat = .defaultTimeFormat(\"v5\"),   timeformat = .defaultTimeFormat(\"v1\") )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_BasicEx1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","text":"filepath full path file generated automatic sampler infotype one values returned validInfoTypes blockbegin identification \"block begins\"; Default: \"ORI BasicEx1\" warn TRUE, warnings generated block contain \"Probe\" sep column separator dec decimal character colnameDate name date column colnameTime name time column dateformat date format string timeformat time format string","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_BasicEx1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","text":"http://www.origmbh.de/fileadmin/user_upload/pdf/basic_ex_1_mobil/ORI_Basic_Ex1_mobil_de.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_BasicEx1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from Ori BasicEx1 — readLogger_Ori_BasicEx1","text":"","code":"if (FALSE) { # set path to example file (contained in this package) (file <- extdataFile(\"Ori/example_Ori_BasicEx1.csv\"))  # read the \"actions\" from the file readLogger_Ori_BasicEx1(file, infotype = \"actions\")    # read the sample times from the file readLogger_Ori_BasicEx1(   file, infotype = \"times\", blockbegin = \"ORI BasicEx1 TU Berlin\" )    # read both at the same time x <- readLogger_Ori_BasicEx1(   file, blockbegin = \"ORI BasicEx1 TU Berlin\" )    # examine the list structure of the result str(x)   }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_MLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","title":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","text":"Read Water Level File Radar Probe","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_MLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","text":"","code":"readLogger_Ori_MLog(   csv,   sep = \"\\t\",   dec = \",\",   timeFormat = c(.defaultTimeFormat(\"v8\"), .defaultTimeFormat(\"v7\")),   ... )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_MLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","text":"csv full path file generated radar probe sep column separator. Default: tabulator character dec decimal character. Default: \",\" timeFormat time format string. Default: \"%d.%m.%Y %H:%M:%S\" ... arguments passed readCsvInputFile, e.g.  stopOnMissingColumns","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_MLog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","text":"http://www.origmbh.de/fileadmin/user_upload/produkte/sensoren/DA_MLOG_Vega_Radar_Puls_61_en.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_Ori_MLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Water Level File from Radar Probe — readLogger_Ori_MLog","text":"","code":"if (FALSE) { file <- extdataFile(\"Ori/example_Ori_MLog_1.csv\")    # set separator different from default (tabulator) and do not complain # about missing columns x <- readLogger_Ori_MLog(filepath, sep = \";\", stopOnMissingColumns = FALSE)    str(x) }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_PA8000.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","title":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","text":"Read Logger File PCE PA8000","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_PA8000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","text":"","code":"readLogger_PCE_PA8000(   filename,   sep = \"\\t\",   dec = \",\",   timeformat = .defaultTimeFormat(\"v2\"),   headerPattern = \"Position\\tDate\\tTime\" )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_PA8000.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","text":"filename full path logger file sep column separator dec decimal character timeformat time format string headerPattern pattern matching table header row","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_PA8000.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","text":"http://www.industrial-needs.com/manual/manual-pce-pa8000.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_PA8000.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from PCE PA8000 — readLogger_PCE_PA8000","text":"","code":"if (FALSE) { # set path to example file (contained in this package) (file <- extdataFile(\"PCE/example_PCE_PA8000.txt\"))  # read the file x <- readLogger_PCE_PA8000(file)    # examine the structure of the result str(x)   }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"Read logger file flow meter TDS 100 PCE Deutschland GmbH","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"","code":"readLogger_PCE_TDS100(txt, timeformat = .defaultTimeFormat(\"v3\"))"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"txt full path text file generated logger timeformat Date time format used file.  Default: \"%y-%m-%d %H:%M:%S\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"data frame columns tstamp, flow, flowunit,  vel, velunit, , DN, Q. Duplicate lines   removed. data frame attribute metadata containing   meta data file, returned .getMetadata","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"http://www.warensortiment.de/bedienung/ba_durchflussmessgeraet-pce-tds100h_de-v-1-1.pdf http://www.industrial-needs.com/manual/manual-pce-tds-100h.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_PCE_TDS100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from PCE TDS100 — readLogger_PCE_TDS100","text":"","code":"if (FALSE) { # set path to example file (contained in this package) file_1 <- extdataFile(\"PCE/example_PCE_TDS100.log\") file_2 <- extdataFile(\"PCE/example_PCE_TDS100_noMeta.log\")  # read a file containing metadata x1 <- readLogger_PCE_TDS100(file_1) # warnings about duplicate timestamps    # read a file not containing metadata x2 <- readLogger_PCE_TDS100(file_2) # warning about missing meta data    # examine the structures of the results str(x1) str(x2)    # get meta data from attribute \"metadata\" kwb.utils::getAttribute(x1, \"metadata\") }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_SIGMA_SD900.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","title":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","text":"Read Logger File SIGMA_SD900","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_SIGMA_SD900.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","text":"","code":"readLogger_SIGMA_SD900(   filepath,   successOnly = FALSE,   sep = \",\",   dateformat = .defaultTimeFormat(\"v6\") )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_SIGMA_SD900.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","text":"filepath full path input file successOnly TRUE, file entries \"SUCCESS\" column \"-RESULT-\" returned. Default: FALSE sep column separator. Default: \",\" dateformat format timestamp. Default: \"%H:%M %m/%d/%Y\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_SIGMA_SD900.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","text":"http://www.hach.com/asset-get.download.jsa?id=7639983273","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_SIGMA_SD900.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from SIGMA_SD900 — readLogger_SIGMA_SD900","text":"","code":"if (FALSE) { # set path to example file (contained in this package) file <- extdataFile(\"SIGMA/example_SIGMA_SD900.csv\")  # read the file (samples <- readLogger_SIGMA_SD900(file))    # read only lines representing successful samples (samplesOk <- readLogger_SIGMA_SD900(file, successOnly = TRUE))    # show metadata (given in attribute \"metadata\") kwb.utils::getAttribute(samplesOk, \"metadata\")     }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from STS DL70 — readLogger_STS_DL70","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"Read Logger File STS DL70","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"","code":"readLogger_STS_DL70(   filepath,   sep = \"\\t\",   dec = \".\",   dateformat = .defaultTimeFormat(\"v5\"),   timeformat = .defaultTimeFormat(\"v1\") )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"filepath full path logger file sep column separator dec decimal character dateformat date format string timeformat time format string","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"data frame attribute \"metadata\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"http://www.stssensoren.de/app/download/5648435717/Manual_DL70-PC-Software_de_DDB013B.pdf?t=1372317244","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_STS_DL70.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from STS DL70 — readLogger_STS_DL70","text":"","code":"if (FALSE) { # set path to example file (contained in this package) file <- extdataFile(\"STS/example_STS_DLN70_H.txt\")  # read the file x <- readLogger_STS_DL70(file)    # examine the structure of the result str(x)   }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","title":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","text":"Read Logger File VEGA BAR54","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","text":"","code":"readLogger_VEGA_BAR54(   filename,   date_yyyymmdd = \"\",   sep = \"\\t\",   dec = \",\",   timeformat = .defaultTimeFormat(\"v2\"),   headerPattern = \"Uhrzeit\\tDruck\" )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","text":"filename full path inoput file date_yyyymmdd day measurements text format \"yyyymmdd\", e.g. \"20140423\" April 23 2014 sep column separator dec decimal character timeformat time format string headerPattern pattern matching table header row","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","text":"http://www.vega.com/downloads/PI/EN/37528-EN.PDF","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from VEGA BAR54 — readLogger_VEGA_BAR54","text":"","code":"if (FALSE) { # set path to example file (contained in this package) (file <- extdataFile(\"VEGA/example_VEGA_BAR54.txt\"))  # read the file x <- readLogger_VEGA_BAR54(file)    # examine the structure of the result str(x) }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from VEGA BAR54 raw — readLogger_VEGA_BAR54_raw","title":"Read Logger File from VEGA BAR54 raw — readLogger_VEGA_BAR54_raw","text":"Read Logger File VEGA BAR54 raw","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from VEGA BAR54 raw — readLogger_VEGA_BAR54_raw","text":"","code":"readLogger_VEGA_BAR54_raw(filepath, trimMetadata = TRUE)"},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from VEGA BAR54 raw — readLogger_VEGA_BAR54_raw","text":"filepath full path logger file trimMetadata TRUE, metadata class \"character\" trimmed (using hsTrim)","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.logger/reference/readLogger_VEGA_BAR54_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Logger File from VEGA BAR54 raw — readLogger_VEGA_BAR54_raw","text":"","code":"if (FALSE) { # set paths to example files (contained in this package) file_1 <- extdataFile(\"VEGA/example_VEGA_BAR54_raw1.gnd\") file_2 <- extdataFile(\"VEGA/example_VEGA_BAR54_raw2.gnd\")  # read the files x1 <- readLogger_VEGA_BAR54_raw(file_1) x2 <- readLogger_VEGA_BAR54_raw(file_2)      # get meta data kwb.utils::getAttribute(x1, \"metadata\") kwb.utils::getAttribute(x2, \"metadata\") }"},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_aquatroll_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Aquatroll Data — read_aquatroll_data","title":"Read Aquatroll Data — read_aquatroll_data","text":"Use readLogger_InSituInc_Aquatroll instead!","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_aquatroll_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Aquatroll Data — read_aquatroll_data","text":"","code":"read_aquatroll_data(file)"},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_aquatroll_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Aquatroll Data — read_aquatroll_data","text":"file full path logger file","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File from LT EDGE M100 — read_logger_LT_EDGE_M100","title":"Read Logger File from LT EDGE M100 — read_logger_LT_EDGE_M100","text":"Read input file water level logger \"LT EDGE M100\"","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File from LT EDGE M100 — read_logger_LT_EDGE_M100","text":"","code":"read_logger_LT_EDGE_M100(   file,   timeFormat = .defaultTimeFormat(\"v4\"),   metaToColumns = FALSE,   dbg = TRUE,   ... )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File from LT EDGE M100 — read_logger_LT_EDGE_M100","text":"file full path file (either .xle .csv) timeFormat time format timestamps given file. Default: \"yyyy/mm/dd HH:MM:SS\". assumed timestamps represent Berlin normal time = Berlin winter time (daylight saving) metaToColumns TRUE, metadata written last columns returned data frame dbg TRUE (default) debug messages (e.g. \"Reading...\") shown ... arguments passed read_logger_LT_EDGE_M100_csv read_logger_LT_EDGE_M100_xle","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Logger File from LT EDGE M100 — read_logger_LT_EDGE_M100","text":"data frame columns TimestampInFile (character timestamp   appeared file), DateTimeUTC (POSIXct timestamp time   zone \"UTC\"), LocalDateTime (POSIXct timestamp time zone    \"Europe/Berlin\"), UTCOffset (integer Offset hours UTC   local time), Level (water level unit given file    header), Temperature (water temperature unit given file   header)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File (.csv) from LT EDGE M100 — read_logger_LT_EDGE_M100_csv","title":"Read Logger File (.csv) from LT EDGE M100 — read_logger_LT_EDGE_M100_csv","text":"Read input file water level logger \"LT EDGE M100\" .csv file","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File (.csv) from LT EDGE M100 — read_logger_LT_EDGE_M100_csv","text":"","code":"read_logger_LT_EDGE_M100_csv(file, country = \"en\", maxRowToLookForHeader = 15)"},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File (.csv) from LT EDGE M100 — read_logger_LT_EDGE_M100_csv","text":"file full path logger file country one \"en\" (English format: column separator = \",\", decimal sign = \".\") \"de\" (German format: column separator = \";\", decimal sign = \",\") maxRowToLookForHeader number rows look column headers (default: 15)","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_xle.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Logger File (.xle) from LT EDGE M100 — read_logger_LT_EDGE_M100_xle","title":"Read Logger File (.xle) from LT EDGE M100 — read_logger_LT_EDGE_M100_xle","text":"Read input file water level logger \"LT EDGE M100\" .xle file","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_xle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Logger File (.xle) from LT EDGE M100 — read_logger_LT_EDGE_M100_xle","text":"","code":"read_logger_LT_EDGE_M100_xle(   file,   timeFormat = .defaultTimeFormat(\"v4\"),   country = NA )"},{"path":"https://kwb-r.github.io/kwb.logger/reference/read_logger_LT_EDGE_M100_xle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Logger File (.xle) from LT EDGE M100 — read_logger_LT_EDGE_M100_xle","text":"file full path logger file timeFormat time format string country one \"en\" (English format: decimal sign = \".\") \"de\" (German format: decimal sign = \",\"). country NA (default) guessed file content","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/validInfoTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid Info Types — validInfoTypes","title":"Valid Info Types — validInfoTypes","text":"Valid Info Types","code":""},{"path":"https://kwb-r.github.io/kwb.logger/reference/validInfoTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Valid Info Types — validInfoTypes","text":"","code":"validInfoTypes()"},{"path":"https://kwb-r.github.io/kwb.logger/news/index.html","id":"kwblogger-030-2022-06-12","dir":"Changelog","previous_headings":"","what":"kwb.logger 0.3.0 2022-06-12","title":"kwb.logger 0.3.0 2022-06-12","text":"Harmonise R package kwb.pkgbuild","code":""},{"path":"https://kwb-r.github.io/kwb.logger/news/index.html","id":"kwblogger-020-2018-06-14","dir":"Changelog","previous_headings":"","what":"kwb.logger 0.2.0 2018-06-14","title":"kwb.logger 0.2.0 2018-06-14","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
